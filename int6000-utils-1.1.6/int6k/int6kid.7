.TH int6kid 7 "Intellon Corporation" "int6000-utils-linux" "Intellon Linux Toolkit"
.SH NAME
int6kid - Echo Device Key
.SH SYNOPSIS
.BR int6kid 
.RI [ options ] 
.RI [ device ] 
.RI [ device ] 
[ ... ]
.SH DESCRIPTION
This program prints a single device key on stdout as a string. It can be used to dynamically define environment variables or insert command line arguments, at runtime. It is intended to echo a specific key read from a single device but it can be used to echo a specific key type read from several devices by specifying either the Intellon Local Management Address or a broadcast address. Output strings are unadorned, having no trailing newline, and so multiple keys will be output as one long string. 
.P
This program is part of the Intellon Linux Toolkit. See the \fBilt\fR man page for an overview and installation instructions.
.SH OPTIONS
.TP
.RB - A
Prints the Ethernet address (MAC) for each specified device. This option and options -\fBD\fr and -\fBM\fR are mutually exclusive. This option is the default.
.TP
.RB - D
Prints the Device Access Key (DAK) for each specified device. This option and options -\fBA\fR and -\fBM\fR are mutually exclusive. This option is the default.
.TP
.RB - e
Redirects stderr messages to stdout. By convention status and error messages are printed on stderr while primary program output is printed on stdout. This option prints all output on stdout in cases where this is desired.
.TP
-\fBi\fR \fIinterface\fR
Select the host Ethernet interface. All requests are sent via this interface and only reponses received via this interface are recognized. The default interface is \fBeth1\fR because most people use \fBeth0\fR as their principle network connection; however, if environment string "PLC" is defined then it takes precedence over the default interface. This option then takes precedence over either default.
.TP
.RB - n
Append a newline to the end of each key. Newlines are omitted by default so that program output can be used as the raw input to another program. If you want the newline then you must request it with this option.
.TP
.RB - M
Prints the Network Membership Key (NMK) for each specified device. This option and options -\fBA\fR and -\fBD\fR are mutually exclusive.
.TP
.RB - q
Suppresses status messages on stderr. 
.TP
.RB - v
Print additional information on stdout. In particular, this option dumps incoming and outgoing packets which can be saved as text files for reference.
.TP
-\fBx\fR
Cause the program to exit on the first error instead of continuing with remaining iterations, operations or devices. Normally, the program reports errors and moves on to the next operation, iteration or device depending on the command line.
.TP
.RB - ? ,-- help
Print program help summary on stdout. This option takes precedence over other options on the command line. 
.TP
.RB - ? ,-- version
Print program version information on stdout. This option takes precedence over other options on the command line. Use this option when sending screen dumps to Intellon Technical Support so that they know exactly which version of the Linux Toolkit you are using.
.SH ARGUMENTS
.TP
.IR device
The MAC address of some powerline device. More than one address may be specified. If more than one address is specified then operations are performed on each device in turn. The default address is \fBlocal\fR. See \fBDEVICES\fR for information about symbolic device addresses.
.SH DEVICES
Powerline devices use Ethernet Media Access Control (MAC) addresses. A MAC address is a 48-bit value entered as 12 hexadecimal digits in upper, lower or mixed character case. Octets may be separated with colons for clarity. For example, "00b052000001", "00:b0:52:00:00:01" and "00b052:000001" are valid and equivalent.
.PP
The following MAC addresses are special and may be entered by name instead of number.
.TP
.BR all
Same as "broadcast".
.TP
.BR broadcast
A synonym for the Ethernet broadcast address, \fBFF:FF:FF:FF:FF:FF\fR. All devices, whether local, remote or foreign recognize messages sent to this address.  A remote device is any device at the far end of a powerline connection. A foreign device is any device not manufactured by Intellon.
.TP
.BR local
A synonym for the Intellon vendor specific Local Management Address (LMA), \fB00:B0:52:00:00:01\fR. All local Intellon devices recognize this address but remote and foreign devices do not. A remote device is any device at the far end of a powerline connection. A foreign device is any device not manufactured by Intellon.
.SH REFERENCES
See the Intellon HomePlug AV Firmware Technical Reference Manual for more information.
.SH DISCLAIMER
Intellon HomePlug AV Vendor Specific Management Message Entry structure and content is proprietary to Intellon Corporation, Ocala FL USA. Consequently, public information may not available. Intellon Corporation reserves the right to modify message structure and content in future firmware releases without any obligation to notify or compensate users of this program.
.SH EXAMPLES
The following example prints the \fBDAK\fR of the local device on stdout. The local device is interrogated because no MAC address was specified. The default interface, \fBeth1\fR on Linux and \fB2\fR on Windows, is used unless environment variable \fBPLC\fR is defined. The DAK is always printed by default. Depending on your system, you may want to use option -\fBn\fR when using this program interactively. 
.PP
   # int6kid
   00:11:22:33:44:55:66:77:88:99:AA:DD:CC:DD:EE:FF
.PP
The following example prints the \fBNMK\fR of device \fB00:B0:52:DA:DA:57\fR connected to interface \fBeth2\fR on a Linux system. Several devices could be specified but that is not a common request.
.PP
   # DAK -Mi eth2 00:B0:52:DA:DA:57
   F4:23:71:4A:51:39:C2:2D:E5:EA:87:43:99:A1:37:81
.PP
The following example dynamically inserts the DAK and NMK of the previous device on the command line of another program. In this example, we want to insert the DAK and NMK into PIB file \fBabc.pib\fR using program \fBmodpib\fR. See the \fBmodpib\fR man page for an explanation of command line syntax. See the GNU bash manuals for an explanation of why this works.
.PP
   # modpib abc.pib -D $(int6kid -Di eth2 00:B0:52:DA:DA:57) -N $(int6kid -Mi eth2 00:B0:52:DA:DA:57)
.PP
The following example is an alternate way of accomplishing the same thing using shell script variables. This method may be easier to read and maintain. Notice that we 'squished' all the options together for brevity.
.PP
   # PLC=00:B0:52:DA:DA:57
   # DAK=$(int6kid -Dieth2 ${PLC})
   # NMK=$(int6kid -Mieth2 ${PLC})
   # modpib abc.pib -D ${DAK} -N ${NMK}
.SH SEE ALSO
.BR ilt ( 7 ), 
.BR int6k ( 7 ), 
.BR int6kf ( 7 ),
.BR int6kp ( 7 ), 
.BR int6kfp ( 7 ),
.BR modpib ( 7 )
.SH CREDITS
 Charles Maier <charles.maier@intellon.com>

